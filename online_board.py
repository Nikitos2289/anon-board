from flask import Flask, request, jsonify, render_template_string
import sqlite3
import datetime
import hashlib
import os
import threading

app = Flask(__name__)
DB_FILE = "online_board.db"

# HTML —à–∞–±–ª–æ–Ω—ã
MAIN_TEMPLATE = """
<!DOCTYPE html>
<html>
<head>
    <title>–ê–Ω–æ–Ω–∏–º–Ω–∞—è –û–Ω–ª–∞–π–Ω –ë–æ—Ä–¥–∞</title>
    <meta charset="utf-8">
    <style>
        body { font-family: Arial; margin: 20px; background: #f0f0f0; }
        .container { max-width: 800px; margin: 0 auto; background: white; padding: 20px; border-radius: 10px; }
        .logo { text-align: center; font-family: monospace; background: black; color: lime; padding: 10px; }
        .topic { border: 1px solid #ccc; margin: 10px 0; padding: 15px; border-radius: 5px; }
        .topic-title { font-size: 1.2em; font-weight: bold; color: #333; }
        .topic-meta { color: #666; font-size: 0.9em; }
        .topic-content { margin: 10px 0; white-space: pre-wrap; }
        form { margin: 20px 0; }
        input, textarea { width: 100%; margin: 5px 0; padding: 8px; }
        button { background: #007cba; color: white; padding: 10px 20px; border: none; border-radius: 5px; }
    </style>
</head>
<body>
    <div class="container">
        <div class="logo">
            <pre>

‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚£Ñ‚£§‚£§‚£§‚£§‚£§‚£†‚£†‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£§‚†∂‚†∫‚¢õ‚£â‚£ç‚£¨‚£§‚£§‚£§‚£§‚£§‚£§‚£•‚£©‚£ô‚†õ‚†≥‚¢¶‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚°¥‚†ü‚£â‚£§‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£§‚£â‚†ª‚¢¶‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°¥‚†ü‚£Å‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚°å‚†ª‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚†ü‚£°‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ø‚¢ø‚°ª‚†õ‚£ã‚°ã‚†õ‚¢ª‚¢ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ñ‚†ª‚¢¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°ü‚£†‚£æ‚£ø‚°ø‚†ü‚¢â‚£æ‚£ø‚£ø‚°ø‚£ª‚¢ù‚£Æ‚¢Ø‚£∫‚£Æ‚¢Ä‚°±‚£ï‚†Ä‚¢Ä‚¢Ø‚£≥‚£≥‚£ù‚¢ü‚£ø‚£ø‚£ø‚£¶‚†â‚†ª‚£ø‚£ø‚£∑‚°å‚¢≥‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚†è‚£∞‚£ø‚†ã‚°µ‚†Å‚£†‚£ø‚£ø‚¢ø‚¢ù‚£Æ‚£ø‚£ø‚¢Ø‚£≥‚£ø‚£ø‚£ø‚°Ø‚¢Ç‚£†‚£æ‚£ø‚£™‚¢ø‚£ø‚£ø‚£º‚°∫‚£ª‚£ø‚°∑‚£Ñ‚†à‚¢Æ‚†π‚£ø‚£Ü‚†π‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚£º‚†É‚£º‚¢ø‚†Å‚¢®‚°•‚†ö‚£°‚£ø‚¢è‚£∑‚£ø‚£ø‚£ø‚°Ø‚£≥‚£ø‚£ø‚£ø‚£ø‚£è‚¢æ‚£ø‚£ø‚£ø‚£∑‚°´‚£ø‚£ø‚£ø‚£ø‚£µ‚¢ª‚¢ø‚°å‚†≤‚¢º‚°Ä‚¢∏‚¢ª‚£ß‚†∏‚£á‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚¢∞‚†è‚£∏‚°è‚¢∏‚°Ä‚†ç‚£†‚¢º‚°ø‚£ï‚£Ø‚£û‚£Æ‚£≥‚£≥‚¢ù‚£µ‚£≥‚£≥‚£≥‚£µ‚†Å‚†Å‚£∑‚£ù‚£Æ‚£∑‚£ù‚°û‚£Æ‚£û‚£û‚£Æ‚£Ø‚°´‚£ø‚°ñ‚£Ñ‚†Å‚¢∞‚°É‚¢π‚£Ü‚†π‚°Ü‚†Ä‚†Ä
‚†Ä‚¢Ä‚°ø‚¢∞‚£ø‚†Ä‚¢∏‚£†‚†û‚¢°‚£ø‚°´‚£æ‚£ø‚£ø‚£ø‚£ø‚¢Ø‚£´‚£ø‚£ø‚£ø‚£ø‚°ø‚†£‚†ö‚¢ø‚¢ø‚£ø‚£ø‚£ø‚¢Æ‚¢ø‚£ø‚£ø‚£ø‚£ø‚£Ø‚°∫‚£ø‚°à‚†≥‚£∏‚†Ä‚¢ò‚£ø‚°Ü‚£ª‚†Ä‚†Ä
‚†Ä‚¢∏‚°á‚£∫‚°ü‚°Ö‚†ê‚†Ö‚¢†‚£æ‚°∑‚£Ω‚£ø‚£ø‚£ø‚£ø‚£ø‚°≥‚°ª‚†ü‚†ü‚†ã‚¢∞‚£ø‚°á‚°∏‚£ø‚°á‚†â‚†ª‚†ª‚†≥‚°ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£û‚¢Ω‚£∑‚°Ñ‚†ò‚†Ä‚£∏‚¢π‚£ß‚¢∏‚°á‚†Ä
‚†Ä‚£Ω‚†Ç‚£ø‚†Ö‚¢∑‚°à‚£∞‚¢ã‚£æ‚¢Ø‚£∫‚¢ø‚¢ø‚¢ø‚¢ø‚¢ü‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£è‚¢∫‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†®‚¢ø‚¢ø‚¢ø‚¢ø‚¢ø‚¢ó‚£ü‚£∑‚†ô‚£¶‚¢Å‚°Ø‚¢ò‚£ø‚¢Ä‚£ó‚†Ä
‚†Ä‚£Ω‚†ê‚£ø‚°á‚†à‚£∑‚†Å‚¢∞‚£ø‚¢Ø‚£∫‚£∑‚£ø‚£æ‚£∑‚£Ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ê‚£ø‚°á‚¢∏‚£ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ø‚£∑‚£Ø‚£∑‚£Ø‚°∑‚£µ‚£ø‚°Ü‚†à‚°æ‚†Å‚¢∏‚£ø‚†Ä‚°∑‚†Ä
‚†Ä‚¢Ω‚†å‚£ø‚£≥‚°Ä‚†®‚†Ä‚£û‚¢ø‚£Ø‚£∫‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†á‚†∏‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚¢Ø‚£∫‚°Ø‚£≥‚†Ä‚†Å‚£†‚¢ü‚£ø‚¢à‚°Ø‚†Ä
‚†Ä‚¢π‚°á‚¢Ω‚°Ü‚†ª‚£Ñ‚¢∏‚°á‚¢∏‚£ø‚°º‚£Ω‚£ø‚£ø‚£ø‚†Ö‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£ø‚£ø‚£ø‚°ø‚°µ‚£ø‚°á‚¢∏‚°á‚£¥‚†ã‚£∏‚°Ø‚¢∞‚°á‚†Ä
‚†Ä‚†à‚£∑‚†ò‚£ø‚°Ä‚†à‚¢≥‚†á‚¢ò‚°ü‚£∑‚°≥‚°ª‚°ª‚°Ω‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°ª‚£ª‚¢ª‚£π‚°æ‚¢ª‚°Ç‚¢∏‚†ö‚†Ä‚£∞‚£ø‚†É‚°æ‚†Ä‚†Ä
‚†Ä‚†Ä‚†∏‚°Ü‚¢ª‚£ü‚¢¶‚£Ñ‚†Å‚†ê‚£ó‚†ò‚¢ø‚£ù‚°Ω‚£ø‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚¢Ø‚£≥‚°ø‚†Ä‚°ø‚†Ä‚¢Ç‚£†‚†û‚£Ω‚°è‚£∞‚†è‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚¢ª‚°Ñ‚¢ø‚£¶‚†â‚†≥‚¢¶‚£π‚°Ä‚†∏‚°ª‚£æ‚°ù‚£ü‚¢¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°¥‚£ª‚£π‚°µ‚¢ü‚†Ö‚¢†‚°ß‚†ñ‚†ã‚£Å‚£æ‚°ü‚£†‚†ó‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚£Ñ‚†ª‚£ø‚£§‚°Ä‚†Ä‚†ì‚†Ä‚¢≥‚°à‚†õ‚£∑‚£Ø‚°£‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£Ω‚°æ‚†ã‚¢†‚†è‚††‚†ä‚¢Ä‚£†‚¢∂‚£ø‚†ü‚£†‚†è‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£¶‚†ô‚¢ø‚£Æ‚°õ‚†≤‚†∂‚†¶‚†Ω‚¢Ñ‚¢Ä‚†õ‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†ã‚¢Ä‚†¥‚†Ω‚†î‚†û‚†ö‚£ã‚£º‚°ø‚¢ã‚°¥‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚£Ñ‚†õ‚£ø‚£∂‚°¶‚°§‚£§‚¢§‚°§‚°∂‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∂‚°¶‚£§‚£§‚¢§‚¢∂‚£æ‚°ø‚¢ã‚¢¥‚†û‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†≥‚£Ü‚°ô‚†ø‚£∂‚£§‚£Å‚£Ä‚£Ä‚£§‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£§‚£Ñ‚£Ñ‚£§‚£¥‚°æ‚°ü‚¢ã‚°¥‚†û‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚†∂‚£å‚°ô‚†ª‚¢ø‚£ø‚£ø‚†Ö‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ê‚£ø‚£ø‚†ø‚†ü‚£â‚°¥‚†ñ‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†ì‚†∂‚¢§‚£ç‚£Å‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£à‚£°‚°•‚†ñ‚†ã‚†ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†à‚†â‚†ã‚†ã‚†ì‚†ì‚†ì‚†ã‚†ã‚†ã‚†â‚†Å‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
            </pre>
        </div>

        <h2>üìù –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Ç–µ–º—É</h2>
        <form action="/create" method="post">
            <input type="text" name="title" placeholder="–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–µ–º—ã" required>
            <textarea name="content" placeholder="–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è" rows="6" required></textarea>
            <button type="submit">üì§ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å</button>
        </form>

        <h2>üìÇ –í—Å–µ —Ç–µ–º—ã ({{ topics_count }})</h2>
        {% for topic in topics %}
        <div class="topic">
            <div class="topic-title">{{ topic.title }}</div>
            <div class="topic-meta">
                üîë ID: {{ topic.id }} | 
                üïê {{ topic.timestamp }} | 
                üë§ {{ topic.author_ip }}
            </div>
            <div class="topic-content">{{ topic.content }}</div>
        </div>
        {% endfor %}

        <div style="text-align: center; margin-top: 20px; color: #666;">
            üîÑ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫ | 
            üì± –î–æ—Å—Ç—É–ø–Ω–æ —Å –ª—é–±–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        </div>
    </div>

    <script>
        // –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        setTimeout(() => { location.reload(); }, 30000);
        
        // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
        document.querySelector('form').addEventListener('submit', function(e) {
            if(!confirm('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–º—É? –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±—É–¥–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!')) {
                e.preventDefault();
            }
        });
    </script>
</body>
</html>
"""

SUCCESS_TEMPLATE = """
<!DOCTYPE html>
<html>
<head>
    <title>–¢–µ–º–∞ —Å–æ–∑–¥–∞–Ω–∞!</title>
    <meta charset="utf-8">
</head>
<body>
    <div style="text-align: center; margin-top: 100px;">
        <h1>‚úÖ –¢–µ–º–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!</h1>
        <p>ID —Ç–µ–º—ã: <strong>{{ topic_id }}</strong></p>
        <p>üîó –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π: <code>{{ url }}/</code></p>
        <a href="/">‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –±–æ—Ä–¥–µ</a>
    </div>
</body>
</html>
"""

def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    conn = sqlite3.connect(DB_FILE)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS topics (
            id TEXT PRIMARY KEY,
            title TEXT NOT NULL,
            content TEXT NOT NULL,
            timestamp TEXT NOT NULL,
            author_ip TEXT DEFAULT 'unknown'
        )
    ''')
    conn.commit()
    conn.close()

def generate_id(text: str) -> str:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID"""
    return hashlib.md5(f"{text}{datetime.datetime.now().isoformat()}".encode()).hexdigest()[:10]

@app.route('/')
def index():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"""
    conn = sqlite3.connect(DB_FILE)
    cursor = conn.cursor()
    cursor.execute('SELECT id, title, content, timestamp, author_ip FROM topics ORDER BY timestamp DESC')
    
    topics = []
    for row in cursor.fetchall():
        topics.append({
            'id': row[0],
            'title': row[1],
            'content': row[2],
            'timestamp': row[3],
            'author_ip': row[4]
        })
    
    conn.close()
    
    return render_template_string(MAIN_TEMPLATE, topics=topics, topics_count=len(topics))

@app.route('/create', methods=['POST'])
def create_topic():
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–µ–º—ã"""
    title = request.form['title']
    content = request.form['content']
    user_ip = request.remote_addr
    
    topic_id = generate_id(title + content)
    
    conn = sqlite3.connect(DB_FILE)
    cursor = conn.cursor()
    cursor.execute('''
        INSERT INTO topics (id, title, content, timestamp, author_ip)
        VALUES (?, ?, ?, ?, ?)
    ''', (topic_id, title, content, datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"), user_ip))
    
    conn.commit()
    conn.close()
    
    return render_template_string(SUCCESS_TEMPLATE, topic_id=topic_id, url=request.host_url)

@app.route('/api/topics')
def api_topics():
    """API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–º (–¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π)"""
    conn = sqlite3.connect(DB_FILE)
    cursor = conn.cursor()
    cursor.execute('SELECT id, title, content, timestamp, author_ip FROM topics ORDER BY timestamp DESC')
    
    topics = []
    for row in cursor.fetchall():
        topics.append({
            'id': row[0],
            'title': row[1],
            'content': row[2],
            'timestamp': row[3],
            'author_ip': row[4]
        })
    
    conn.close()
    return jsonify(topics)

@app.route('/api/create', methods=['POST'])
def api_create():
    """API –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–º—ã"""
    data = request.get_json()
    title = data['title']
    content = data['content']
    user_ip = request.remote_addr
    
    topic_id = generate_id(title + content)
    
    conn = sqlite3.connect(DB_FILE)
    cursor = conn.cursor()
    cursor.execute('''
        INSERT INTO topics (id, title, content, timestamp, author_ip)
        VALUES (?, ?, ?, ?, ?)
    ''', (topic_id, title, content, datetime.datetime.now().isoformat(), user_ip))
    
    conn.commit()
    conn.close()
    
    return jsonify({"status": "success", "topic_id": topic_id})

def start_server():
    """–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞"""
    init_database()
    print("üöÄ –ó–∞–ø—É—Å–∫ –æ–Ω–ª–∞–π–Ω –±–æ—Ä–¥—ã...")
    print("üåê –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:5000")
    print("üì± –û—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç–æ—Ç –∞–¥—Ä–µ—Å –Ω–∞ –ª—é–±–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –≤ –≤–∞—à–µ–π —Å–µ—Ç–∏")
    print("\n‚ö†Ô∏è  –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("   ngrok http 5000")
    print("   –ò–õ–ò")
    print("   ssh -R 80:localhost:5000 nokey@localhost.run")
    print("\n‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    
    app.run(host='0.0.0.0', port=5000, debug=False)

if __name__ == '__main__':
    start_server()